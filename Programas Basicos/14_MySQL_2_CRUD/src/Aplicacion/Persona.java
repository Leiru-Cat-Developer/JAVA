package Aplicacion;
import com.mysql.jdbc.Connection;
import java.awt.Dimension;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
public class Persona extends javax.swing.JFrame {
    //CONEXION BD
    public static final String URL = "jdbc:mysql://localhost:3306/escuela?autoReconnet=true&useSSL=false";
    public static final String USUARIO = "root";
    public static final String CONTRASEÃ‘A = "123456789";
    PreparedStatement pst;
    ResultSet rst;
    public Persona() {
        initComponents();
        textFieldIDPersonaOculto.setVisible(false);                             //CAJA ID OCULTA
        this.setSize(700, 550);
        this.setMinimumSize(new Dimension(710, 560));
        this.setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelPrincipal = new javax.swing.JPanel();
        etiquetaTitulo = new javax.swing.JLabel();
        etiquetaClave = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        etiquetaDomicilio = new javax.swing.JLabel();
        etiquetaCelular = new javax.swing.JLabel();
        etiquetaCorreoElectronico = new javax.swing.JLabel();
        etiquetaFechaNacimiento = new javax.swing.JLabel();
        etiquetaGenero = new javax.swing.JLabel();
        botonInsertar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        textFieldClave = new javax.swing.JTextField();
        textFieldNombre = new javax.swing.JTextField();
        textFieldDomicilio = new javax.swing.JTextField();
        textFieldCelular = new javax.swing.JTextField();
        textFieldCorreoElectronico = new javax.swing.JTextField();
        textFieldFechaNacimiento = new javax.swing.JTextField();
        comboBoxGenero = new javax.swing.JComboBox<>();
        textFieldBuscar = new javax.swing.JTextField();
        textFieldIDPersonaOculto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PERSONA");

        panelPrincipal.setBackground(new java.awt.Color(0, 0, 0));
        panelPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setLayout(new java.awt.GridBagLayout());

        etiquetaTitulo.setFont(new java.awt.Font("Arial", 3, 24)); // NOI18N
        etiquetaTitulo.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaTitulo.setText("FORMULARIO - PERSONA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaTitulo, gridBagConstraints);

        etiquetaClave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaClave.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaClave.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaClave.setText("CLAVE:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaClave, gridBagConstraints);

        etiquetaNombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaNombre.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaNombre.setText("NOMBRE:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaNombre, gridBagConstraints);

        etiquetaDomicilio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaDomicilio.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaDomicilio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaDomicilio.setText("DOMICILIO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaDomicilio, gridBagConstraints);

        etiquetaCelular.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaCelular.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaCelular.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaCelular.setText("CELULAR:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaCelular, gridBagConstraints);

        etiquetaCorreoElectronico.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaCorreoElectronico.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaCorreoElectronico.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaCorreoElectronico.setText("CORREO ELECTRONICO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaCorreoElectronico, gridBagConstraints);

        etiquetaFechaNacimiento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaFechaNacimiento.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaFechaNacimiento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaFechaNacimiento.setText("FECHA NACIMIENTO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaFechaNacimiento, gridBagConstraints);

        etiquetaGenero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        etiquetaGenero.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaGenero.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaGenero.setText("GENERO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(etiquetaGenero, gridBagConstraints);

        botonInsertar.setBackground(new java.awt.Color(0, 0, 0));
        botonInsertar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        botonInsertar.setForeground(new java.awt.Color(255, 255, 255));
        botonInsertar.setText("INSERTAR");
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(botonInsertar, gridBagConstraints);

        botonModificar.setBackground(new java.awt.Color(0, 0, 0));
        botonModificar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        botonModificar.setForeground(new java.awt.Color(255, 255, 255));
        botonModificar.setText("MODIFICAR");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(botonModificar, gridBagConstraints);

        botonEliminar.setBackground(new java.awt.Color(0, 0, 0));
        botonEliminar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        botonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        botonEliminar.setText("ELIMINAR");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(botonEliminar, gridBagConstraints);

        botonLimpiar.setBackground(new java.awt.Color(0, 0, 0));
        botonLimpiar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        botonLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        botonLimpiar.setText("LIMPIAR");
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(botonLimpiar, gridBagConstraints);

        botonBuscar.setBackground(new java.awt.Color(0, 0, 0));
        botonBuscar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        botonBuscar.setForeground(new java.awt.Color(255, 255, 255));
        botonBuscar.setText("BUSCAR");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(botonBuscar, gridBagConstraints);

        textFieldClave.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldClave.setForeground(new java.awt.Color(0, 0, 0));
        textFieldClave.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldClave, gridBagConstraints);

        textFieldNombre.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldNombre.setForeground(new java.awt.Color(0, 0, 0));
        textFieldNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldNombre, gridBagConstraints);

        textFieldDomicilio.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldDomicilio.setForeground(new java.awt.Color(0, 0, 0));
        textFieldDomicilio.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldDomicilio, gridBagConstraints);

        textFieldCelular.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldCelular.setForeground(new java.awt.Color(0, 0, 0));
        textFieldCelular.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldCelular, gridBagConstraints);

        textFieldCorreoElectronico.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldCorreoElectronico.setForeground(new java.awt.Color(0, 0, 0));
        textFieldCorreoElectronico.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldCorreoElectronico, gridBagConstraints);

        textFieldFechaNacimiento.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldFechaNacimiento.setForeground(new java.awt.Color(0, 0, 0));
        textFieldFechaNacimiento.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldFechaNacimiento, gridBagConstraints);

        comboBoxGenero.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        comboBoxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Masculino", "Femenino" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(comboBoxGenero, gridBagConstraints);

        textFieldBuscar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldBuscar.setForeground(new java.awt.Color(0, 0, 0));
        textFieldBuscar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldBuscar, gridBagConstraints);

        textFieldIDPersonaOculto.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        textFieldIDPersonaOculto.setForeground(new java.awt.Color(0, 0, 0));
        textFieldIDPersonaOculto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelPrincipal.add(textFieldIDPersonaOculto, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void botonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
        Connection conexion = null;
        if((textFieldClave.getText().isEmpty())||
           (textFieldNombre.getText().isEmpty())||
           (textFieldDomicilio.getText().isEmpty()||
           (textFieldCelular.getText().isEmpty())||
           (textFieldCorreoElectronico.getText().isEmpty())||
           (textFieldFechaNacimiento.getText().isEmpty())||
           (comboBoxGenero.getSelectedIndex() == 0))){
            JOptionPane.showMessageDialog(null, "VERIFIQUE QUE TODOS LOS CAMPOS ESTAN LLENOS POR FAVOR");
        }else{
            try {
                conexion = getConnection();
                pst = conexion.prepareStatement("insert into persona (clave, nombre, domicilio, celular, correoElectronico, fechaNacimiento, genero) values (?,?,?,?,?,?,?)");
                pst.setString(1, textFieldClave.getText());                         //STRING
                pst.setString(2, textFieldNombre.getText());                        //STRING
                pst.setString(3, textFieldDomicilio.getText());                     //STRING
                pst.setString(4, textFieldCelular.getText());                       //STRING
                pst.setString(5, textFieldCorreoElectronico.getText());             //STRING
                pst.setDate(6, Date.valueOf(textFieldFechaNacimiento.getText()));   //DATE
                pst.setString(7, comboBoxGenero.getSelectedItem().toString());      //COMBO BOX
                int resultadoInsertar = pst.executeUpdate();
                if(resultadoInsertar > 0){
                    JOptionPane.showMessageDialog(null, "REGISTRO INSERTADO CORRECTAMENTE");
                    limpiar();
                }else{
                    JOptionPane.showMessageDialog(null, "ERROR ... NO SE PUDO INSERTAR");
                }
                conexion.close();                                                   //CERRAR BD
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR ... CONEXION INCORRECTA");
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_botonInsertarActionPerformed
    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        Connection conexion = null;
        if((textFieldIDPersonaOculto.getText().isEmpty())||
           (textFieldClave.getText().isEmpty())||
           (textFieldNombre.getText().isEmpty())||
           (textFieldDomicilio.getText().isEmpty()||
           (textFieldCelular.getText().isEmpty())||
           (textFieldCorreoElectronico.getText().isEmpty())||
           (textFieldFechaNacimiento.getText().isEmpty())||
           (comboBoxGenero.getSelectedIndex() == 0))){
            JOptionPane.showMessageDialog(null, "PRIMERO BUSQUE, Y DESPUÃ‰S MODIFIQUE LOS DATOS POR FAVOR");
        }else{
            try {
                conexion = getConnection();
                pst = conexion.prepareStatement("update persona set clave=?,nombre=?,domicilio=?,celular=?,correoElectronico=?,fechaNacimiento=?,genero=? where idPersona=?");
                pst.setString(1, textFieldClave.getText());                         //STRING
                pst.setString(2, textFieldNombre.getText());                        //STRING
                pst.setString(3, textFieldDomicilio.getText());                     //STRING
                pst.setString(4, textFieldCelular.getText());                       //STRING
                pst.setString(5, textFieldCorreoElectronico.getText());             //STRING
                pst.setDate(6, Date.valueOf(textFieldFechaNacimiento.getText()));   //DATE
                pst.setString(7, comboBoxGenero.getSelectedItem().toString());      //COMBO BOX
                pst.setInt(8, Integer.parseInt(textFieldIDPersonaOculto.getText()));//STRING INT
                int resultadoModificar = pst.executeUpdate();
                if(resultadoModificar > 0){
                    JOptionPane.showMessageDialog(null, "REGISTRO MODIFICADO CORRECTAMENTE");
                    limpiar();
                }else{
                    JOptionPane.showMessageDialog(null, "ERROR ... NO SE PUDO MODIFICAR");
                }
                conexion.close();                                                   //CERRAR BD
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR ... CONEXION INCORRECTA");
            }
        }
    }//GEN-LAST:event_botonModificarActionPerformed
    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        Connection conexion = null;
        if((textFieldIDPersonaOculto.getText().isEmpty())||
           (textFieldClave.getText().isEmpty())||
           (textFieldNombre.getText().isEmpty())||
           (textFieldDomicilio.getText().isEmpty()||
           (textFieldCelular.getText().isEmpty())||
           (textFieldCorreoElectronico.getText().isEmpty())||
           (textFieldFechaNacimiento.getText().isEmpty())||
           (comboBoxGenero.getSelectedIndex() == 0))){
            JOptionPane.showMessageDialog(null, "PRIMERO BUSQUE, Y DESPUÃ‰S MODIFIQUE LOS DATOS POR FAVOR");
        }else{
            try {
                conexion = getConnection();
                pst = conexion.prepareStatement("delete from persona where idPersona=?");
                pst.setInt(1, Integer.parseInt(textFieldIDPersonaOculto.getText()));//STRING INT
                int resultadoEliminar = pst.executeUpdate();
                if(resultadoEliminar > 0){
                    JOptionPane.showMessageDialog(null, "REGISTRO ELIMINADO CORRECTAMENTE");
                    limpiar();
                }else{
                    JOptionPane.showMessageDialog(null, "ERROR ... NO SE PUDO ELIMINAR");
                }
                conexion.close();                                                   //CERRAR BD
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR ... CONEXION INCORRECTA");
            }
        }
    }//GEN-LAST:event_botonEliminarActionPerformed
    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
        limpiar();
        JOptionPane.showMessageDialog(null, "CAMPOS LIMPIADOS CORRECTAMENTE");
    }//GEN-LAST:event_botonLimpiarActionPerformed
    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        Connection conexion = null;
        if((textFieldBuscar.getText().isEmpty())){
            JOptionPane.showMessageDialog(null, "NECESITA INSERTAR UNA CLAVE PARA BUSCAR");
        }else{
            try {
                conexion = getConnection();
                pst = conexion.prepareStatement("select * from persona where clave=?");
                pst.setString(1, textFieldBuscar.getText());
                rst = pst.executeQuery();                                       //OBTENEMOS DE BD
                if(rst.next()){
                    textFieldIDPersonaOculto.setText(String.valueOf(rst.getInt("idPersona")));
                    textFieldClave.setText(rst.getString("clave"));
                    textFieldNombre.setText(rst.getString("nombre"));
                    textFieldDomicilio.setText(rst.getString("domicilio"));
                    textFieldCelular.setText(rst.getString("celular"));
                    textFieldCorreoElectronico.setText(rst.getString("correoElectronico"));
                    textFieldFechaNacimiento.setText(String.valueOf(rst.getDate("fechaNacimiento")));
                    comboBoxGenero.setSelectedItem(rst.getString("genero"));
                }else{
                    JOptionPane.showMessageDialog(null, "LA PERSONA NO SE PUDO ENCONTRAR");
                }
                conexion.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR ... CONEXION INCORRECTA");
            }
        }
    }//GEN-LAST:event_botonBuscarActionPerformed
    public Connection getConnection(){
        Connection conexion = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conexion = (Connection) DriverManager.getConnection(URL, USUARIO, CONTRASEÃ‘A);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR ... CONEXION INCORRECTA");
        }
        return conexion;
    }
    public void limpiar(){
        textFieldBuscar.setText("");
        textFieldIDPersonaOculto.setText("");
        textFieldClave.setText("");
        textFieldNombre.setText("");
        textFieldDomicilio.setText("");
        textFieldCelular.setText("");
        textFieldCorreoElectronico.setText("");
        textFieldFechaNacimiento.setText("");
        comboBoxGenero.setSelectedIndex(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Persona().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonInsertar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JComboBox<String> comboBoxGenero;
    private javax.swing.JLabel etiquetaCelular;
    private javax.swing.JLabel etiquetaClave;
    private javax.swing.JLabel etiquetaCorreoElectronico;
    private javax.swing.JLabel etiquetaDomicilio;
    private javax.swing.JLabel etiquetaFechaNacimiento;
    private javax.swing.JLabel etiquetaGenero;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaTitulo;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextField textFieldBuscar;
    private javax.swing.JTextField textFieldCelular;
    private javax.swing.JTextField textFieldClave;
    private javax.swing.JTextField textFieldCorreoElectronico;
    private javax.swing.JTextField textFieldDomicilio;
    private javax.swing.JTextField textFieldFechaNacimiento;
    private javax.swing.JTextField textFieldIDPersonaOculto;
    private javax.swing.JTextField textFieldNombre;
    // End of variables declaration//GEN-END:variables
}