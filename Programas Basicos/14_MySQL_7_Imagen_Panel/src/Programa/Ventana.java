package Programa;
import Modelo.Clase_Conexion;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
public class Ventana extends javax.swing.JFrame {
    public Ventana() {
        initComponents();
        this.setSize(500, 610);
        this.setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelImagen = new javax.swing.JPanel();
        botonCargarImagen = new javax.swing.JButton();
        botonMostrarImagen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout panelImagenLayout = new javax.swing.GroupLayout(panelImagen);
        panelImagen.setLayout(panelImagenLayout);
        panelImagenLayout.setHorizontalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );
        panelImagenLayout.setVerticalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );

        botonCargarImagen.setText("CARGAR IMAGEN");
        botonCargarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarImagenActionPerformed(evt);
            }
        });

        botonMostrarImagen.setText("MOSTRAR IMAGEN");
        botonMostrarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMostrarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonCargarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonMostrarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonCargarImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(botonMostrarImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void botonCargarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarImagenActionPerformed
        JFileChooser escoger = new JFileChooser();
        escoger.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);               //MODELO
        FileNameExtensionFilter filtro1 = new FileNameExtensionFilter("*.jpg", "jpg");   //FILTRO
        FileNameExtensionFilter filtro2 = new FileNameExtensionFilter("*.png", "png");   //FILTRO
        escoger.setFileFilter(filtro1);
        escoger.setFileFilter(filtro2);
        int seleccion = escoger.showOpenDialog(this);                                   //OBTENER OPCION
        PreparedStatement ps = null;
        Clase_Conexion con = new Clase_Conexion();
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //SI SELECCIONO ACEPTAR
            File archivo = escoger.getSelectedFile();                                   //OBTENER ARCHIVO
            try {
                FileInputStream archivoDeEntrada = new FileInputStream(archivo);
                Connection conexion = con.getConnection();
                ps = conexion.prepareStatement("insert into imagen (img) values (?)");
                ps.setBinaryStream(1, archivoDeEntrada, (int) archivo.length());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "IMAGEN GUARDADA");
            } catch (Exception ex) {
                System.err.println("ERROR AL SUBIR EL ARCHIVO");
            }
        }
    }//GEN-LAST:event_botonCargarImagenActionPerformed
    private void botonMostrarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMostrarImagenActionPerformed
        int idImagen = Integer.parseInt(JOptionPane.showInputDialog("DIGITE EL ID DE LA IMAGEN QUE DESEA CARGAR"));
        PreparedStatement ps = null;
        ResultSet rs = null;
        Clase_Conexion con = new Clase_Conexion();
        try {
            Connection conexion = con.getConnection();
            ps = conexion.prepareStatement("select img from imagen where idImagen=?");
            ps.setInt(1, idImagen);
            rs = ps.executeQuery();
            BufferedImage buffimg = null;
            while(rs.next()){
                InputStream img = rs.getBinaryStream(1);                        //COLOCAR NÃšMERO DE COLUMNA DE IMG
                buffimg = ImageIO.read(img);                                    //TRANSFORMANDO LA IMAGEN EN PIXELES
                int ancho = panelImagen.getWidth();
                int largo = panelImagen.getHeight();
                Imagen imagen = new Imagen(ancho, largo, buffimg);              //CAMBIAR RUTA A BUFFEREDIMAGE
                panelImagen.add(imagen);
                panelImagen.repaint();
            }
            rs.close();
        } catch (Exception e) {
            System.err.println("ERROR AL CARGAR EL ARCHIVO");
        }
    }//GEN-LAST:event_botonMostrarImagenActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCargarImagen;
    private javax.swing.JButton botonMostrarImagen;
    private javax.swing.JPanel panelImagen;
    // End of variables declaration//GEN-END:variables
}